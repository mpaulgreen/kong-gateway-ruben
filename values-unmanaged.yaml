clusterGroup:
  name: unmanaged
  isHubCluster: true
  # Note: setting this to true stores the vault unseal keys inside a cluster secret and
  # is fundamentally insecure
  insecureUnsealVaultInsideCluster: false

  namespaces:
  - vault
  - golang-external-secrets
  - kong-clustering

  projects:
    - hub
    - controlplane
    - dataplane

  externalClusters:
    - controlplane
    - dataplane

  applications:

    vault:
      name: vault
      namespace: vault
      project: hub
      chart: vault
      repoURL: https://helm.releases.hashicorp.com
      targetRevision: v0.20.1
      overrides:
      - name: global.openshift
        value: "true"
      - name: injector.enabled
        value: "false"
      - name: ui.enabled
        value: "true"
      - name: ui.serviceType
        value: LoadBalancer
      - name: server.route.enabled
        value: "true"
      - name: server.route.host
        value: null
      - name: server.route.tls.termination
        value: edge
      - name: server.image.repository
        value: "registry.connect.redhat.com/hashicorp/vault"
      - name: server.image.tag
        value: "1.10.3-ubi"
      - name: server.ha.enabled
        value: true
      - name: server.ha.replicas
        value: 2
      - name: server.ha.raft.enabled
        value: true
      - name: server.ha.raft.tls
        value: false

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      path: common/golang-external-secrets

    license:
      name: license
      namespace: kong
      project: hub
      path: charts/all/license
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
      generators:
        - clusters: {}

    kong-cp:
      name: kong-cp
      namespace: kong
      project: controlplane
      path: charts/all/kong
      clusterName: controlplane
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
      ignoreDifferences:
        - group: "apps"
          kind: "Deployment"
          jqPathExpressions:
          - .spec.template.spec.containers[] | select(.name == "proxy").env[] | select(.name == "KONG_ADMIN_API_URI")
        - group: keycloak.org
          kind: "KeycloakClient"
          jsonPointers:
          - /spec/client/redirectUris
          - /spec/client/rootUrl
        - group: "apps.openshift.io"
          kind: "DeploymentConfig"
          name: "postgresql"
          jqPathExpressions:
          - .spec.template.spec.containers[] | select(.name == "postgresql").image
          - .spec.triggers[].imageChangeParams.lastTriggeredImage

    kong-dp:
      name: kong-dp
      namespace: kong
      project: dataplane
      path: charts/all/kong
      clusterName: dataplane
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
      extraValueFiles:
       - /values-kong-dp.yaml
      ignoreDifferences:
        - group: "apps"
          kind: "Deployment"
          jqPathExpressions:
          - .spec.template.spec.containers[] | select(.name == "proxy").env[] | select(.name == "KONG_CLUSTER_CONTROL_PLANE" or .name == "KONG_CLUSTER_TELEMETRY_ENDPOINT")
        - group: keycloak.org
          kind: "KeycloakClient"
          jsonPointers:
          - /spec/client/redirectUris
          - /spec/client/rootUrl

    bookinfo:
      name: bookinfo
      namespace: bookinfo
      project: dataplane
      path: charts/all/bookinfo
      clusterName: dataplane
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
    
    kong-clustering:
      name: kong-clustering
      namespace: kong-clustering
      project: hub
      path: charts/all/clustering
      syncPolicy:
        automated:
          selfHeal: true